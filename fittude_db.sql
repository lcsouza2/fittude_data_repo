CREATE TABLE "user" (
    user_id     INTEGER         GENERATED BY DEFAULT AS IDENTITY,
    email       VARCHAR(100)    NOT NULL,
    name        VARCHAR(100)    NOT NULL,
    password    VARCHAR(512)    NOT NULL,

    CONSTRAINT pk_user
        PRIMARY KEY (user_id),
    
    CONSTRAINT uq_user_email
        UNIQUE (email)
);

CREATE TABLE muscle_group (
    group_name  VARCHAR(50)     NOT NULL,
    user_id     INTEGER         NULL,
    active      BOOLEAN         DEFAULT true,

    CONSTRAINT pk_muscle_group
        PRIMARY KEY (group_name),

    CONSTRAINT fk_muscle_group_user
        FOREIGN KEY (user_id) REFERENCES "user" (user_id),
    
    CONSTRAINT uq_muscle_group_name
        UNIQUE (user_id, group_name)
);

CREATE TABLE equipment (
    equipment_id    INTEGER         GENERATED BY DEFAULT AS IDENTITY,
    user_id         INTEGER         NULL,
    group_name      VARCHAR(50)     NOT NULL,
    equipment_name  VARCHAR(50)     NOT NULL,
    active          BOOLEAN         DEFAULT true,

    CONSTRAINT pk_equipment
        PRIMARY KEY (equipment_id),

    CONSTRAINT fk_equipment_user
        FOREIGN KEY (user_id) REFERENCES "user" (user_id),

    CONSTRAINT fk_equipment_muscle_group
        FOREIGN KEY (group_name) REFERENCES muscle_group (group_name),
    
    CONSTRAINT uq_equipment_name
        UNIQUE (user_id, group_name, equipment_name)
);

CREATE TABLE muscle (
    muscle_id       INTEGER         GENERATED BY DEFAULT AS IDENTITY,
    group_name      VARCHAR(50)     NOT NULL,
    user_id         INTEGER         NULL,
    muscle_name     VARCHAR(50)     NOT NULL,
    active          BOOLEAN         DEFAULT true,

    CONSTRAINT pk_muscle
        PRIMARY KEY (muscle_id),

    CONSTRAINT fk_muscle_user
        FOREIGN KEY (user_id) REFERENCES "user" (user_id),

    CONSTRAINT fk_muscle_muscle_group
        FOREIGN KEY (group_name) REFERENCES muscle_group (group_name),
    
    CONSTRAINT uq_muscle_name
        UNIQUE (user_id, group_name, muscle_name)
);

CREATE TABLE exercise (
    exercise_id     INTEGER         GENERATED BY DEFAULT AS IDENTITY,
    user_id         INTEGER         NULL,
    exercise_name   VARCHAR(50)     NOT NULL,
    description     VARCHAR(120)    NULL,
    active          BOOLEAN         DEFAULT true,

    CONSTRAINT pk_exercise
        PRIMARY KEY (exercise_id),

    CONSTRAINT fk_exercise_user
        FOREIGN KEY (user_id) REFERENCES "user" (user_id),
    
    CONSTRAINT uq_exercise_name
        UNIQUE (user_id, exercise_name)
);

CREATE TABLE exercise_muscle (
    muscle_id       INTEGER     NOT NULL,
    exercise_id     INTEGER     NOT NULL,

    CONSTRAINT pk_exercise_muscle
        PRIMARY KEY (muscle_id, exercise_id),

    CONSTRAINT fk_exercise_muscle_muscle
        FOREIGN KEY (muscle_id) REFERENCES muscle (muscle_id),

    CONSTRAINT fk_exercise_muscle_exercise
        FOREIGN KEY (exercise_id) REFERENCES exercise (exercise_id)
);

CREATE TABLE exercise_equipment (
    equipment_id    INTEGER     NOT NULL,
    exercise_id     INTEGER     NOT NULL,

    CONSTRAINT pk_exercise_equipment
        PRIMARY KEY (equipment_id, exercise_id),

    CONSTRAINT fk_exercise_equipment_equipment
        FOREIGN KEY (equipment_id) REFERENCES equipment (equipment_id),

    CONSTRAINT fk_exercise_equipment_exercise
        FOREIGN KEY (exercise_id) REFERENCES exercise (exercise_id)
);

CREATE TABLE workout_plan (
    workout_plan_id         INTEGER         GENERATED BY DEFAULT AS IDENTITY,
    user_id                INTEGER         NOT NULL,
    workout_plan_name      VARCHAR(20)     NOT NULL,
    workout_plan_goal      VARCHAR(50)     NOT NULL,
    active                 BOOLEAN         DEFAULT true,

    CONSTRAINT pk_workout_plan
        PRIMARY KEY (workout_plan_id),

    CONSTRAINT fk_workout_plan_user
        FOREIGN KEY (user_id) REFERENCES "user" (user_id),
    
    CONSTRAINT uq_workout_plan_name
        UNIQUE (user_id, workout_plan_name)
);

CREATE TABLE workout_split (
    split               VARCHAR(20)     NOT NULL,
    workout_plan_id     INTEGER         NOT NULL,
    active              BOOLEAN         DEFAULT true,

    CONSTRAINT pk_workout_split
        PRIMARY KEY (split, workout_plan_id),

    CONSTRAINT fk_workout_split_workout_plan
        FOREIGN KEY (workout_plan_id) REFERENCES workout_plan (workout_plan_id)
);

CREATE TABLE workout_report (
    workout_report_id   INTEGER         GENERATED BY DEFAULT AS IDENTITY,
    workout_plan_id     INTEGER         NOT NULL,
    report_date         DATE            NOT NULL,
    split              VARCHAR(20)      NOT NULL,

    CONSTRAINT pk_workout_report
        PRIMARY KEY (workout_report_id),

    CONSTRAINT fk_workout_report_workout_split
        FOREIGN KEY (workout_plan_id, split) 
        REFERENCES workout_split (workout_plan_id, split)
);

CREATE TABLE split_exercise (
    workout_plan_id     INTEGER         NOT NULL,
    split              VARCHAR(20)      NOT NULL,
    exercise_id        INTEGER         NOT NULL,
    execution_order    INTEGER         NOT NULL,
    sets              INTEGER         NOT NULL,
    reps              VARCHAR(10)      NOT NULL,
    advanced_technique VARCHAR(30)      NULL,
    rest_time         INTEGER         NOT NULL,
    active            BOOLEAN         DEFAULT true,

    CONSTRAINT pk_split_exercise
        PRIMARY KEY (workout_plan_id, split, exercise_id, execution_order),

    CONSTRAINT fk_split_exercise_workout_split
        FOREIGN KEY (workout_plan_id, split) 
        REFERENCES workout_split (workout_plan_id, split),

    CONSTRAINT fk_split_exercise_exercise
        FOREIGN KEY (exercise_id) REFERENCES exercise (exercise_id)
);

CREATE TABLE set_report (
    workout_report_id   INTEGER         NOT NULL,
    exercise_id        INTEGER         NOT NULL,
    split              VARCHAR(20)      NOT NULL,
    workout_plan_id     INTEGER         NOT NULL,
    execution_order    INTEGER         NOT NULL,
    set_number         INTEGER         NOT NULL,
    reps              VARCHAR(20)      NOT NULL,
    weight            INTEGER         NOT NULL,
    notes             VARCHAR(255)     NULL,

    CONSTRAINT pk_set_report
        PRIMARY KEY (workout_report_id, exercise_id, split, workout_plan_id, set_number),

    CONSTRAINT fk_set_report_split_exercise
        FOREIGN KEY (workout_plan_id, split, exercise_id, execution_order) 
        REFERENCES split_exercise (workout_plan_id, split, exercise_id, execution_order),

    CONSTRAINT fk_set_report_workout_report
        FOREIGN KEY (workout_report_id) REFERENCES workout_report (workout_report_id)
);

CREATE INDEX idx_email_user ON "user" (email);

CREATE INDEX idx_muscle_group_user_id ON muscle_group (user_id);

CREATE INDEX idx_equipment_user_id_group_name ON equipment (user_id, group_name);

CREATE INDEX idx_muscle_user_id_group_name ON muscle (user_id, group_name);

CREATE INDEX idx_exercise_id ON exercise (exercise_id);

CREATE INDEX idx_exercise_muscle_exercise_id ON exercise_muscle (exercise_id);
CREATE INDEX idx_exercise_muscle_muscle_id ON exercise_muscle (muscle_id);

CREATE INDEX idx_exercise_equipment_equipment_id ON exercise_equipment (equipment_id);
CREATE INDEX idx_exercise_equipment_exercise_id ON exercise_equipment (exercise_id);

CREATE INDEX idx_workout_plan_user_id ON workout_plan (user_id);

CREATE INDEX idx_split_exercise_workout_plan_id ON split_exercise (workout_plan_id);
CREATE INDEX idx_set_report_workout_plan_workout_report ON set_report (workout_plan_id, workout_report_id);